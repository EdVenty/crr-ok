{"version":3,"sources":["stories/delivery.ts","stories/store.ts","stories/AlertMessage.tsx","stories/DropDown.tsx","stories/DeliveryForm.tsx","stories/Requests.tsx","stories/MyOrder.tsx","auth.ts","stories/Account.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["EDisabledReason","evalDisabledReason","reason","hallOverlow","lang","robotBroken","unknown","setDeliveryDisabledReason","createAction","store","createStore","state","action","type","deliveryDisabled","deliveryDisabledReason","payload","console","log","AlertMessage","props","getState","subscribe","setState","this","className","none","React","PureComponent","DropDown","width","values","value","label","defaultValue","isDisabled","onChangeCallback","undefined","classNamePrefix","onChange","options","FormDiv","styled","div","theme","colorSecondary","fontBase","boxShadowSecondary","deliveryFormPadding","borderRadius","FormElementDiv","deliveryFormElementMargin","stations","DeliveryForm","sending","deliveryFrom","deliveryTo","sendDelivery","bind","acceptedDelivery","disabled","dispatch","setTimeout","document","body","style","backgroundColor","deliveryApproved","TextField","fullWidth","filter","newValue","Button","variant","onClick","CircularProgress","position","size","href","Request","status","prefix","fromMe","clientName","from","src","alt","to","evalStatus","MyOrder","openAccept","openRate","handleClose","handleClickOpenAccept","handleClickOpenRate","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Rating","name","precision","provider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","GoogleAuthProvider","auth","getAuth","AuthContext","createContext","Account","authorize","signInWithPopup","then","result","credentialFromResult","accessToken","user","displayName","catch","error","errorCode","code","errorMessage","message","email","credential","credentialFromError","context","Box","sx","right","top","Stack","direction","spacing","alignItems","Typography","color","Avatar","contextType","App","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82b55e37.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport lang from './ru_ru.json';\r\n\r\nexport enum EDisabledReason{\r\n    none, hallOverlow, robotBroken, unknown\r\n}\r\n\r\nexport const evalDisabledReason = (reason: EDisabledReason) => {\r\n    switch(reason) {\r\n        case EDisabledReason.hallOverlow:\r\n            return lang['page.index.delivery-alert-message.overflow'];\r\n        case EDisabledReason.robotBroken:\r\n            return lang['page.index.delivery-alert-message.robot-broken'];\r\n        case EDisabledReason.unknown:\r\n            return lang['page.index.delivery-alery-message.unknown'];\r\n        default:\r\n            return lang['page.index.delivery-alery-message.unknown'];\r\n    }\r\n}\r\n\r\nexport const setDeliveryDisabledReason = createAction<EDisabledReason>('DELIVERY_DISABLED_RESON');\r\nexport const setDeliveryOff = createAction('DELIVERY_OFF');\r\nexport const setDeliveryOn = createAction('DELIVERY_ON');","import { ActionCreatorWithPayload, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Action, createStore } from 'redux';\r\nimport { EDisabledReason } from './delivery';\r\n\r\nexport interface IStore{\r\n    deliveryDisabled?: boolean,\r\n    deliveryDisabledReason?: EDisabledReason\r\n};\r\n\r\nexport const reducer = (state: IStore = {}, action: PayloadAction<any>) => {\r\n    switch(action.type){\r\n        case 'DELIVERY_OFF':\r\n            state.deliveryDisabled = true;\r\n            break;\r\n        case 'DELIVERY_ON':\r\n            state.deliveryDisabled = false;\r\n            break;\r\n        case 'DELIVERY_DISABLED_RESON':\r\n            state.deliveryDisabledReason = action.payload\r\n    }\r\n    console.log(state);\r\n    return state;\r\n};\r\nexport const store = createStore(reducer);","import React from 'react';\r\nimport { EDisabledReason, evalDisabledReason } from './delivery';\r\nimport { store } from './store';\r\n\r\nexport interface IAlertMessageProps{\r\n\r\n};\r\nexport interface IAlertMessageState{\r\n    reason?: EDisabledReason,\r\n    deliveryDisabled?: boolean\r\n};\r\n\r\nexport class AlertMessage extends React.PureComponent<IAlertMessageProps, IAlertMessageState>{\r\n    constructor(props: IAlertMessageProps){\r\n        super(props);\r\n        this.state = {\r\n            reason: store.getState().deliveryDisabledReason,\r\n            deliveryDisabled: store.getState().deliveryDisabled\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        store.subscribe(() => \r\n            this.setState({ \r\n                reason: store.getState().deliveryDisabledReason,\r\n                deliveryDisabled: store.getState().deliveryDisabled\r\n            })\r\n        );\r\n    }\r\n    render() {\r\n        if(this.state.deliveryDisabled){\r\n            return <div className=\"alert-card container\">\r\n                {evalDisabledReason(this.state.reason ?? EDisabledReason.none)}\r\n            </div>\r\n        }\r\n        return null;\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport '../stories/dropDown.css';\r\nimport Select, { SingleValue, StylesConfig } from 'react-select';\r\n\r\ninterface IChangeCallback{\r\n    value: any, label: string\r\n};\r\n\r\nexport interface ITextBoxProps{\r\n    width?: 'fit-content' | 'match-parent',\r\n    values?: Array<IChangeCallback>,\r\n    onChangeCallback?: (newValue: SingleValue<IChangeCallback>) => void,\r\n    defaultValue?: IChangeCallback,\r\n    isDisabled?: boolean\r\n};\r\n// const DropDownInput = styled.input`\r\n//     background: ${({theme}) => theme.colorSecondaryInactive};\r\n//     color: ${({theme}) => theme.textColorInactive};\r\n//     padding: ${({theme}) => theme.inputPadding};\r\n//     box-shadow: ${({theme}) => theme.boxShadowSecondary};\r\n//     font-family: ${({theme}) => theme.fontBase};\r\n// `\r\n\r\nexport const DropDown = ({\r\n    width = 'match-parent',\r\n    values = [\r\n        { value: 'chocolate', label: 'Chocolate' },\r\n        { value: 'strawberry', label: 'Strawberry' },\r\n        { value: 'vanilla', label: 'Vanilla' }\r\n    ],\r\n    defaultValue = values[0],\r\n    isDisabled = false,\r\n    onChangeCallback = undefined,\r\n    ...props\r\n}: ITextBoxProps) => {\r\n    return <Select\r\n        className=\"drop-down\"\r\n        classNamePrefix=\"drop-down\"\r\n        isDisabled={isDisabled}\r\n        defaultValue={defaultValue}\r\n        onChange={onChangeCallback}\r\n        options={values}\r\n        {...props}\r\n    />\r\n}","import React from \"react\";\r\nimport styled from 'styled-components';\r\n// import { Button } from \"./Button\";\r\nimport '../stories/deliveryFrom.css';\r\nimport { TextBox } from \"./TextBox\";\r\nimport { DropDown } from \"./DropDown\";\r\nimport Button from '@mui/material/Button/Button';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { CircularProgress, TextField } from \"@mui/material\";\r\nimport { store } from \"./store\";\r\nimport { EDisabledReason, setDeliveryDisabledReason, setDeliveryOff, setDeliveryOn } from \"./delivery\";\r\n\r\nconst FormDiv = styled.div`\r\n    background: ${({theme}) => theme.colorSecondary};\r\n    font-family: ${({theme}) => theme.fontBase};\r\n    box-shadow: ${({theme}) => theme.boxShadowSecondary};\r\n    padding: ${({theme}) => theme.deliveryFormPadding};\r\n    border-radius: ${({theme}) => theme.borderRadius};\r\n`\r\nconst FormElementDiv = styled.div`\r\n    /* margin: ${({theme}) => theme.deliveryFormElementMargin}; */\r\n    margin-bottom: 1em;\r\n`\r\nexport interface IDeliveryFormProps{\r\n\r\n};\r\nexport interface IDeliveryFormState{\r\n    deliveryFrom?: string,\r\n    deliveryTo?: string,\r\n    sending?: boolean,\r\n    deliveryApproved?: boolean,\r\n    disabled?: boolean\r\n};\r\nexport interface IDropDownValues{\r\n    value: any,\r\n    label: string\r\n}\r\n\r\nconst stations: Array<IDropDownValues> = [\r\n    {value: 'tren', label: 'Тренировочная'},\r\n    {value: 'prep', label: 'Преподавательская'},\r\n    {value: 'kab-1', label: 'Кабинет №1'},\r\n    {value: 'kab-5', label: 'Кабинет №5'},\r\n    {value: 'kab-6', label: 'Кабинет №6'},\r\n    {value: 'kab-7', label: 'Кабинет №7'},\r\n];\r\n\r\nexport class DeliveryForm extends React.PureComponent<IDeliveryFormProps, IDeliveryFormState>{\r\n    constructor(props: IDeliveryFormProps){\r\n        super(props)\r\n        this.state = {\r\n            sending: false,\r\n            deliveryFrom: stations[0].value,\r\n            deliveryTo: stations[1].value\r\n        };\r\n        this.sendDelivery = this.sendDelivery.bind(this);\r\n        this.acceptedDelivery = this.acceptedDelivery.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        store.subscribe(() => {\r\n            this.setState({\r\n                disabled: store.getState().deliveryDisabled\r\n            });\r\n        });\r\n        store.dispatch(setDeliveryDisabledReason(EDisabledReason.hallOverlow));\r\n    }\r\n    sendDelivery(){\r\n        this.setState({\r\n            sending: true\r\n        });\r\n        setTimeout(this.acceptedDelivery, 5000);\r\n        document.body.style.backgroundColor = \"#c7c7c7\"\r\n    }\r\n    acceptedDelivery(){\r\n        this.setState({\r\n            sending: false,\r\n            deliveryApproved: true\r\n        });\r\n        document.body.style.backgroundColor = '#3f9e22';\r\n        setTimeout(() => document.body.style.backgroundColor = '#0e6cc4', 10000);\r\n    }\r\n    render(){\r\n        return <FormDiv className=\"delivery-form\">\r\n            <FormElementDiv>\r\n                <h2>Оформление доставки</h2>\r\n            </FormElementDiv>\r\n            <FormElementDiv>\r\n                <p>Имя</p>\r\n                <TextField\r\n                    disabled={this.state.disabled}\r\n                    fullWidth={true}\r\n                    // values={stations.filter(({value}) => value !== this.state.deliveryFrom)}\r\n                    // onChangeCallback={newValue => this.setState({deliveryTo: newValue?.value})}\r\n                />\r\n            </FormElementDiv>\r\n            <FormElementDiv>\r\n                <p>Пункт отправления</p>\r\n                <DropDown \r\n                    isDisabled={this.state.disabled}\r\n                    values={stations.filter(({value}) => value !== this.state.deliveryTo)}\r\n                    onChangeCallback={newValue => this.setState({deliveryFrom: newValue?.value})}\r\n                    defaultValue={stations[0]}\r\n                />\r\n            </FormElementDiv>\r\n            <FormElementDiv>\r\n                <p>Пункт получения</p>\r\n                <DropDown \r\n                    isDisabled={this.state.disabled}\r\n                    values={stations.filter(({value}) => value !== this.state.deliveryFrom)}\r\n                    onChangeCallback={newValue => this.setState({deliveryTo: newValue?.value})}\r\n                    defaultValue={stations[1]}\r\n                />\r\n            </FormElementDiv>\r\n            <Button variant=\"contained\" onClick={() => this.sendDelivery()} disabled={this.state.disabled || this.state.sending}>\r\n                Отправить робота\r\n                {this.state.sending ? <CircularProgress style={{position: 'absolute'}} size='2rem'/> : null}\r\n            </Button>\r\n            {this.state.deliveryApproved ? \r\n            <div>\r\n                <p>\r\n                    Заявка отправлена. Ожидайте прибытия робота. Подробнее про доставку вы можете прочитать здесь:\r\n                </p>\r\n                <a href=\"https://google.com/\">\r\n                    Как работает доставка?\r\n                </a> \r\n            </div> : null}\r\n            \r\n        </FormDiv>\r\n    }\r\n}","import React from \"react\";\r\nimport './requests.css';\r\n\r\ninterface IProps {\r\n    from: string,\r\n    to: string,\r\n    clientName: string,\r\n    fromMe?: boolean,\r\n    interactive?: boolean,\r\n    status: 'waiting' | 'toSender' | 'toGetter' | 'openGetter' | 'openSender',\r\n    prefix?: string\r\n}\r\ninterface IState {\r\n    status: 'waiting' | 'toSender' | 'toGetter' | 'openGetter' | 'openSender'\r\n}\r\n\r\nexport class Request extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state = {\r\n            status: this.props.status\r\n        };\r\n    }\r\n    evalStatus(){\r\n        switch(this.state.status){\r\n            case 'waiting':\r\n                return \"ждёт\";\r\n            case 'toGetter':\r\n                return \"в пути к получателю\";\r\n            case 'toSender':\r\n                return \"в пути к отправителю\"; \r\n            case 'openGetter':\r\n                return 'прибыл к получателю';\r\n            case 'openSender':\r\n                return 'прибыл к отправителю';\r\n        }\r\n        return this.state.status;\r\n    }\r\n    render() {\r\n        return <div className={`delivery-request-container ${this.props.prefix}-delivery-request-container`}>\r\n            <div className={`delivery-request ${this.props.prefix}-delivery-request ${this.props.fromMe ? 'delivery-request-my ' + this.props.prefix + '-delivery-request-my' : 'delivery-request-other ' + this.props.prefix + '-delivery-request-other'}`}>\r\n                <h4 className={`delivery-request-client ${this.props.prefix}-delivery-request-client`}>{this.props.clientName}</h4>\r\n                <div className={`delivery-request-points ${this.props.prefix}-delivery-request-points`}>\r\n                    <p>{this.props.from}</p>\r\n                    <img src=\"https://img.icons8.com/ios/100/000000/van.png\" className=\"delivery-icon\" alt=\"van\"/>\r\n                    <p>{this.props.to}</p>\r\n                </div>\r\n                <p className={`delivery-request-status ${this.props.prefix}-delivery-request-status`}>{this.evalStatus()}</p>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport Rating from '@mui/material/Rating';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { Request } from './Requests';\r\nimport { Button } from '@mui/material';\r\n\r\ninterface IState{\r\n    openAccept: boolean;\r\n    openRate: boolean;\r\n};\r\ninterface IProps{\r\n\r\n};\r\n\r\nexport class MyOrder extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state = {\r\n            openAccept: false,\r\n            openRate: false\r\n        };\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleClickOpenAccept = this.handleClickOpenAccept.bind(this);\r\n        this.handleClickOpenRate = this.handleClickOpenRate.bind(this);\r\n    }\r\n    handleClickOpenAccept(){\r\n        this.setState({openAccept: true,\r\n        openRate: false});\r\n    };\r\n\r\n    handleClickOpenRate(){\r\n        this.setState({openRate: true,\r\n        openAccept: false});\r\n    };\r\n\r\n    handleClose(){\r\n        this.setState({openAccept: false, openRate: false});\r\n    };\r\n    render(){\r\n        return <div className=\"container current-request-container\">\r\n        <h3>Ваш заказ</h3>\r\n        <Request \r\n          from=\"Тренировочная\"\r\n          to=\"Кабинет №1\"\r\n          clientName=\"Я\"\r\n          status=\"openGetter\"\r\n          fromMe={true}\r\n          prefix='current'\r\n        />\r\n        <Button onClick={this.handleClickOpenAccept}>Открыть крышку</Button>\r\n          <Dialog\r\n          open={this.state.openAccept}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Вы уверены?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Вы точно хотите открыть крышку робота?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {/* <Rating name=\"half-rating\" defaultValue={0} precision={0.5} /> */}\r\n            <Button onClick={this.handleClose}>Отмена</Button>\r\n            <Button onClick={this.handleClickOpenRate}>Открыть</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Dialog\r\n          open={this.state.openRate}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Спасибо за заказ!\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Пожалуйста, оцените доставку :)\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {/* <Rating name=\"half-rating\" defaultValue={0} precision={0.5} /> */}\r\n            <Rating name=\"half-rating\" defaultValue={0} precision={0.5} />\r\n            <Button onClick={this.handleClose}>Ок</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>;\r\n    }\r\n}","import { initializeApp } from 'firebase/app';\r\nimport { GoogleAuthProvider, getAuth } from \"firebase/auth\";\r\nimport React from 'react';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAgDloXJCT1sobA4HrYM5GrSBQ1tzUJXb8\",\r\n    authDomain: \"crr-ok.firebaseapp.com\",\r\n    projectId: \"crr-ok\",\r\n    storageBucket: \"crr-ok.appspot.com\",\r\n    messagingSenderId: \"788634447451\",\r\n    appId: \"1:788634447451:web:4438ff99ef4150b889197e\",\r\n    measurementId: \"G-0KFYFVN697\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const provider = new GoogleAuthProvider();\r\nexport const auth = getAuth();\r\n\r\nexport const AuthContext = React.createContext({\r\n    auth, provider\r\n});","import React from \"react\";\r\nimport { GoogleAuthProvider, Auth, signInWithPopup } from 'firebase/auth';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport { AuthContext } from '../auth';\r\n\r\ninterface IProps {};\r\ninterface IState {\r\n    name: string\r\n};\r\n\r\nexport class Account extends React.PureComponent<IProps, IState>{\r\n    auth: Auth | null;\r\n    provider: GoogleAuthProvider | null;\r\n    static contextType = AuthContext;\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.authorize = this.authorize.bind(this);\r\n        this.auth = null;\r\n        this.provider = null;\r\n        this.state = {\r\n            name: \"name\"\r\n        };\r\n    }\r\n    authorize(){\r\n        signInWithPopup(this.auth!, this.provider!)\r\n        .then((result) => {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            const credential = GoogleAuthProvider.credentialFromResult(result);\r\n            const token = credential!.accessToken;\r\n            // The signed-in user info.\r\n            const user = result.user;\r\n            console.log(user);\r\n            this.setState({\r\n                name: user.displayName!\r\n            });\r\n        }).catch((error) => {\r\n            // Handle Errors here.\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n            // The email of the user's account used.\r\n            const email = error.email;\r\n            // The AuthCredential type that was used.\r\n            const credential = GoogleAuthProvider.credentialFromError(error);\r\n            console.log(credential);\r\n        });\r\n    }\r\n    render(){\r\n        this.auth = this.context.auth;\r\n        this.provider = this.context.provider;\r\n        return <Box sx={{\r\n            position: 'fixed',\r\n            right: '1rem',\r\n            top: '1rem'\r\n          }} onClick={this.authorize}>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n              <Typography variant=\"body1\" sx={{color: \"#fff\"}}>\r\n                {this.state.name}\r\n              </Typography>\r\n              <Avatar alt=\"Андрей Данильченко\" />\r\n            </Stack>\r\n          </Box>\r\n    }\r\n}","// import logo from './logo.svg';\nimport { Button } from '@mui/material';\nimport './App.css';\nimport { AlertMessage } from './stories/AlertMessage';\nimport { EDisabledReason, setDeliveryDisabledReason, setDeliveryOn, setDeliveryOff } from './stories/delivery';\nimport { DeliveryForm } from './stories/DeliveryForm';\nimport { DropDown } from './stories/DropDown';\nimport { MyOrder } from './stories/MyOrder';\nimport { Request } from './stories/Requests';\nimport { store } from './stories/store';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Account } from './stories/Account';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className='box'>\n        <div className='wave -one'></div>\n        <div className='wave -two'></div>\n        <div className='wave -three'></div>\n      </div>\n      <Account/>\n      <div className=\"text\">\n        {/* <a href=\"https://google.com\" className=\"what-link\">Что это?</a> */}\n        <a href=\"#info\"><h1 className=\"crr-ok\">ЦРР О.К.</h1></a>\n      </div>\n      <MyOrder/>\n      <div className=\"content\">\n        <AlertMessage/>\n        <Accordion defaultExpanded={true}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>Доставка</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <DeliveryForm/>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion defaultExpanded={true}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>Текущие заказы</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div className=\"container requests\">\n              <h2>Текущие заказы</h2>\n              <Request \n                from=\"Кабинет №7\"\n                to=\"Тренировочная\"\n                clientName=\"Amogus\"\n                status=\"toGetter\"\n              />\n              <Request \n                from=\"Тренировочная\"\n                to=\"Кабинет №1\"\n                clientName=\"Edventy\"\n                status=\"waiting\"\n                fromMe={true}\n              />\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion defaultExpanded={true}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>Что такое ЦРР ОК?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div className=\"container info-card\" id='info'>\n              <h2>Что такое ЦРР ОК?</h2>\n              {/* <p>ЦРР ОК - это система роботов-доставщиков, работающих в Центре Развития Робототехники.</p> */}\n              {/* <p>Роботы оснащёны лидаром, камерой и другими датчиками, что делает их нахождение в помещении безопасным.</p>\n              <p>На данным момент проходит программа тестирования. Для офромления доставки робота из одного кабинета в другой воспользуйтесь формой выше. Робот автоматически заберёт заказ из пункта отправления и доставит его в пункт получения.</p>\n              <p>После получения заказа робот подъезджает к двери пункта отправления и в кабинете активируется Бипер-3000. Робот забирает заказ и процедура повторяется с пунктом получения.</p> */}\n              <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quod iusto soluta, a asperiores voluptates velit delectus eveniet at nisi assumenda quam officia unde, rerum sed odit ullam placeat laborum voluptas?</p>\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        {/* <div className=\"container test-box\">\n          [ТЕСТ] Алерт-месседж\n          <DropDown \n              values={[\n                  {value: EDisabledReason.unknown, label: 'Неизвестно'},\n                  {value: EDisabledReason.robotBroken, label: 'Тех-работы'},\n                  {value: EDisabledReason.hallOverlow, label: 'Холл заполнен'}\n              ]}\n              onChangeCallback={newValue => store.dispatch(setDeliveryDisabledReason(newValue?.value))}\n              defaultValue={{value: EDisabledReason.hallOverlow, label: 'Холл заполнен'}}\n          />\n          <Button variant=\"contained\" onClick={() => store.dispatch(store.getState().deliveryDisabled ? setDeliveryOn() : setDeliveryOff())}>\n              [ТЕСТ] Переключить возможность доставки\n          </Button>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { auth, provider, AuthContext } from './auth';\n\nReactDOM.render(\n  <AuthContext.Provider value={{\n    auth, provider\n  }}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </AuthContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
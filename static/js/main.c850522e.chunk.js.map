{"version":3,"sources":["stories/DropDown.tsx","stories/DeliveryForm.tsx","stories/Requests.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["DropDown","width","values","value","label","defaultValue","isDisabled","onChangeCallback","undefined","props","onChange","options","FormDiv","styled","div","theme","colorSecondary","fontBase","boxShadowSecondary","deliveryFormPadding","borderRadius","FormElementDiv","deliveryFormElementMargin","stations","DeliveryForm","state","sending","deliveryFrom","deliveryTo","sendDelivery","bind","acceptedDelivery","this","setState","setTimeout","document","body","style","backgroundColor","deliveryApproved","className","filter","newValue","Button","variant","onClick","disabled","CircularProgress","position","size","href","React","PureComponent","Request","status","fromMe","clientName","from","src","to","evalStatus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c850522e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport '../stories/dropDown.css';\r\nimport Select, { SingleValue } from 'react-select';\r\n\r\ninterface IChangeCallback{\r\n    value: string, label: string\r\n};\r\n\r\nexport interface ITextBoxProps{\r\n    width?: 'fit-content' | 'match-parent',\r\n    values?: Array<IChangeCallback>,\r\n    onChangeCallback?: (newValue: SingleValue<IChangeCallback>) => void,\r\n    defaultValue?: IChangeCallback,\r\n    isDisabled?: boolean\r\n};\r\n// const DropDownInput = styled.input`\r\n//     background: ${({theme}) => theme.colorSecondaryInactive};\r\n//     color: ${({theme}) => theme.textColorInactive};\r\n//     padding: ${({theme}) => theme.inputPadding};\r\n//     box-shadow: ${({theme}) => theme.boxShadowSecondary};\r\n//     font-family: ${({theme}) => theme.fontBase};\r\n// `\r\n\r\n\r\nexport const DropDown = ({\r\n    width = 'match-parent',\r\n    values = [\r\n        { value: 'chocolate', label: 'Chocolate' },\r\n        { value: 'strawberry', label: 'Strawberry' },\r\n        { value: 'vanilla', label: 'Vanilla' }\r\n    ],\r\n    defaultValue = values[0],\r\n    isDisabled = false,\r\n    onChangeCallback = undefined,\r\n    ...props\r\n}: ITextBoxProps) => {\r\n    return <Select\r\n        isDisabled={isDisabled}\r\n        defaultValue={defaultValue}\r\n        onChange={onChangeCallback}\r\n        options={values}\r\n        {...props}\r\n    />\r\n}","import React from \"react\";\r\nimport styled from 'styled-components';\r\n// import { Button } from \"./Button\";\r\nimport '../stories/deliveryFrom.css';\r\nimport { TextBox } from \"./TextBox\";\r\nimport { DropDown } from \"./DropDown\";\r\nimport Button from '@mui/material/Button/Button';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst FormDiv = styled.div`\r\n    background: ${({theme}) => theme.colorSecondary};\r\n    font-family: ${({theme}) => theme.fontBase};\r\n    box-shadow: ${({theme}) => theme.boxShadowSecondary};\r\n    padding: ${({theme}) => theme.deliveryFormPadding};\r\n    border-radius: ${({theme}) => theme.borderRadius};\r\n`\r\nconst FormElementDiv = styled.div`\r\n    /* margin: ${({theme}) => theme.deliveryFormElementMargin}; */\r\n    margin-bottom: 1em;\r\n`\r\nexport interface IDeliveryFormProps{\r\n\r\n};\r\nexport interface IDeliveryFormState{\r\n    deliveryFrom?: string,\r\n    deliveryTo?: string,\r\n    sending?: boolean,\r\n    deliveryApproved?: boolean\r\n};\r\nexport interface IDropDownValues{\r\n    value: string,\r\n    label: string\r\n}\r\n\r\nconst stations: Array<IDropDownValues> = [\r\n    {value: 'tren', label: 'Тренировочная'},\r\n    {value: 'prep', label: 'Преподавательская'},\r\n    {value: 'kab-1', label: 'Кабинет №1'},\r\n    {value: 'kab-5', label: 'Кабинет №5'},\r\n    {value: 'kab-6', label: 'Кабинет №6'},\r\n    {value: 'kab-7', label: 'Кабинет №7'},\r\n];\r\n\r\nexport class DeliveryForm extends React.PureComponent<IDeliveryFormProps, IDeliveryFormState>{\r\n    constructor(props: IDeliveryFormProps){\r\n        super(props)\r\n        this.state = {\r\n            sending: false,\r\n            deliveryFrom: stations[0].value,\r\n            deliveryTo: stations[1].value\r\n        };\r\n        this.sendDelivery = this.sendDelivery.bind(this);\r\n        this.acceptedDelivery = this.acceptedDelivery.bind(this);\r\n    }\r\n    sendDelivery(){\r\n        this.setState({\r\n            sending: true\r\n        });\r\n        setTimeout(this.acceptedDelivery, 5000);\r\n        document.body.style.backgroundColor = \"#c7c7c7\"\r\n    }\r\n    acceptedDelivery(){\r\n        this.setState({\r\n            sending: false,\r\n            deliveryApproved: true\r\n        });\r\n        document.body.style.backgroundColor = '#3f9e22';\r\n        setTimeout(() => document.body.style.backgroundColor = '#0e6cc4', 10000);\r\n    }\r\n    render(){\r\n        return <FormDiv className=\"delivery-form\">\r\n            <FormElementDiv>\r\n                <h2>Оформление доставки</h2>\r\n            </FormElementDiv>\r\n            <FormElementDiv>\r\n                <p>Пункт отправления</p>\r\n                <DropDown \r\n                    isDisabled={this.state.sending}\r\n                    values={stations.filter(({value}) => value !== this.state.deliveryTo)}\r\n                    onChangeCallback={newValue => this.setState({deliveryFrom: newValue?.value})}\r\n                    defaultValue={stations[0]}\r\n                />\r\n            </FormElementDiv>\r\n            <FormElementDiv>\r\n                <p>Пункт получения</p>\r\n                <DropDown \r\n                    isDisabled={this.state.sending}\r\n                    values={stations.filter(({value}) => value !== this.state.deliveryFrom)}\r\n                    onChangeCallback={newValue => this.setState({deliveryTo: newValue?.value})}\r\n                    defaultValue={stations[1]}\r\n                />\r\n            </FormElementDiv>\r\n            <Button variant=\"contained\" onClick={() => this.sendDelivery()} disabled={this.state.sending}>\r\n                Отправить робота\r\n                {this.state.sending ? <CircularProgress style={{position: 'absolute'}} size='2rem'/> : null}\r\n            </Button>\r\n            {this.state.deliveryApproved ? \r\n            <div>\r\n                <p>\r\n                    Заявка отправлена. Ожидайте прибытия робота. Подробнее про доставку вы можете прочитать здесь:\r\n                </p>\r\n                <a href=\"https://google.com/\">\r\n                    Как работает доставка?\r\n                </a> \r\n            </div> : null}\r\n            \r\n        </FormDiv>\r\n    }\r\n}","import React from \"react\";\r\nimport './requests.css';\r\n\r\ninterface IProps {\r\n    from: string,\r\n    to: string,\r\n    clientName: string,\r\n    fromMe?: boolean,\r\n    interactive?: boolean,\r\n    status: 'waiting' | 'toSender' | 'toGetter'\r\n}\r\ninterface IState {\r\n    status: 'waiting' | 'toSender' | 'toGetter'\r\n}\r\n\r\nexport class Request extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state = {\r\n            status: this.props.status\r\n        };\r\n    }\r\n    evalStatus(){\r\n        switch(this.state.status){\r\n            case 'waiting':\r\n                return \"ждёт\";\r\n            case 'toGetter':\r\n                return \"в пути к получателю\";\r\n            case 'toSender':\r\n                return \"в пути к отправителю\"; \r\n        }\r\n        return this.state.status;\r\n    }\r\n    render() {\r\n        return <div className=\"delivery-request-container\">\r\n            <div className={`delivery-request ${this.props.fromMe ? 'delivery-request-my' : 'delivery-request-other'}`}>\r\n                <h4 className=\"delivery-request-client\">{this.props.clientName}</h4>\r\n                <div className=\"delivery-request-points\">\r\n                    <p>{this.props.from}</p>\r\n                    <img src=\"https://img.icons8.com/ios/100/000000/van.png\" className=\"delivery-icon\"/>\r\n                    <p>{this.props.to}</p>\r\n                </div>\r\n                <p className=\"delivery-request-status\">{this.evalStatus()}</p>\r\n            </div>\r\n        </div>\r\n    }\r\n}","// import logo from './logo.svg';\nimport './App.css';\nimport { DeliveryForm } from './stories/DeliveryForm';\nimport { Request } from './stories/Requests';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className='box'>\n        <div className='wave -one'></div>\n        <div className='wave -two'></div>\n        <div className='wave -three'></div>\n      </div>\n      <div className=\"text\">\n        {/* <a href=\"https://google.com\" className=\"what-link\">Что это?</a> */}\n        <h1 className=\"crr-ok\">ЦРР О.К.</h1>\n      </div>\n      <div className=\"content\">\n        <div className=\"alert-card container\">\n          Внимание! Сейчас в холле период большой загруженности! Доставка станет возможной через 5-10 минут.\n        </div>\n        <DeliveryForm/>\n        <div className=\"container requests\">\n          <h2>Текущие заказы</h2>\n          <Request \n            from=\"Кабинет №7\"\n            to=\"Тренировочная\"\n            clientName=\"Amogus\"\n            status=\"toGetter\"\n          />\n          <Request \n            from=\"Тренировочная\"\n            to=\"Кабинет №1\"\n            clientName=\"Edventy\"\n            status=\"waiting\"\n            fromMe={true}\n          />\n        </div>\n        <div className=\"container info-card\">\n          <h2>Что такое ЦРР ОК?</h2>\n          {/* <p>ЦРР ОК - это система роботов-доставщиков, работающих в Центре Развития Робототехники.</p> */}\n          {/* <p>Роботы оснащёны лидаром, камерой и другими датчиками, что делает их нахождение в помещении безопасным.</p>\n          <p>На данным момент проходит программа тестирования. Для офромления доставки робота из одного кабинета в другой воспользуйтесь формой выше. Робот автоматически заберёт заказ из пункта отправления и доставит его в пункт получения.</p>\n          <p>После получения заказа робот подъезджает к двери пункта отправления и в кабинете активируется Бипер-3000. Робот забирает заказ и процедура повторяется с пунктом получения.</p> */}\n          <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quod iusto soluta, a asperiores voluptates velit delectus eveniet at nisi assumenda quam officia unde, rerum sed odit ullam placeat laborum voluptas?</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}